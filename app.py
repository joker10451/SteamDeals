import streamlit as st
import plotly.graph_objects as go
from datetime import datetime, timedelta
from steam_api import SteamMarketAPI
from data_manager import DataManager

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
steam_api = SteamMarketAPI()
data_manager = DataManager()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω Steam",
    page_icon="üìà"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤ Steam")

# –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
search_query = st.text_input("üîç –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤", key="search")
if search_query:
    with st.spinner("–ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤..."):
        items = steam_api.search_items(search_query)
        if items:
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞")
            for item in items:
                col1, col2, col3 = st.columns([3, 2, 1])
                with col1:
                    st.write(item['name'])
                with col2:
                    st.write(f"–¶–µ–Ω–∞: {item.get('price', '–ù/–î')} ‚ÇΩ")
                with col3:
                    if st.button("–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", key=f"watch_{item['name']}"):
                        price = float(item.get('price', '0').replace(',', '.'))
                        data_manager.add_watched_item(item['name'], price)
                        st.success("–ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ!")
                        st.rerun()
        else:
            st.warning("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
st.subheader("üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã")
watched_items = data_manager.get_watched_items()

if not watched_items:
    st.info("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
else:
    # –§–∏–ª—å—Ç—Ä—ã
    min_price = st.slider("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (‚ÇΩ)", 0, 10000, 0)
    max_price = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (‚ÇΩ)", 0, 10000, 10000)

    for item_name in watched_items:
        item_data = data_manager.watched_items[item_name]
        current_price_data = steam_api.get_item_price(item_name)
        
        if current_price_data and 'lowest_price' in current_price_data:
            current_price = float(current_price_data['lowest_price'].replace('‚ÇΩ', '').replace(',', '.').strip())
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            if current_price < min_price or current_price > max_price:
                continue

            st.write("---")
            col1, col2, col3 = st.columns([3, 2, 1])
            
            with col1:
                st.write(f"**{item_name}**")
            with col2:
                price_diff = current_price - item_data['initial_price']
                price_diff_percent = (price_diff / item_data['initial_price']) * 100
                
                st.write(f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current_price:.2f} ‚ÇΩ")
                st.write(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {price_diff_percent:+.2f}%")
            with col3:
                if st.button("–£–¥–∞–ª–∏—Ç—å", key=f"remove_{item_name}"):
                    data_manager.remove_watched_item(item_name)
                    st.rerun()

            # –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω
            price_history = item_data['price_history']
            dates = [datetime.fromisoformat(date) for date, _ in price_history]
            prices = [price for _, price in price_history]

            fig = go.Figure()
            fig.add_trace(go.Scatter(
                x=dates,
                y=prices,
                mode='lines+markers',
                name='–¶–µ–Ω–∞'
            ))
            
            fig.update_layout(
                title=f"–ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω: {item_name}",
                xaxis_title="–î–∞—Ç–∞",
                yaxis_title="–¶–µ–Ω–∞ (‚ÇΩ)",
                height=400
            )
            
            st.plotly_chart(fig, use_container_width=True)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω
if watched_items:
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Ü–µ–Ω—ã"):
        with st.spinner("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω..."):
            for item_name in watched_items:
                price_data = steam_api.get_item_price(item_name)
                if price_data and 'lowest_price' in price_data:
                    current_price = float(price_data['lowest_price'].replace('‚ÇΩ', '').replace(',', '.').strip())
                    data_manager.update_price(item_name, current_price)
        st.success("–¶–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        st.rerun()
